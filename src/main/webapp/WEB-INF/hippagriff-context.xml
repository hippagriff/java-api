<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:sec="http://www.springframework.org/schema/security" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:oauth="http://www.springframework.org/schema/security/oauth"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
       http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
       http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd">

	<description>
		App Context for the Hippagriff Java API
	</description>

	<context:annotation-config />
	<context:component-scan base-package="com.hippagriff" />

	<!-- ************************** -->
	<!-- Security setup -->
	<!-- ************************** -->
	<sec:http entry-point-ref="resteasyServiceAuthenticationEntryPoint"
		create-session="never">
		<sec:intercept-url pattern="/**"
			access="ROLE_API_APPLICATION_USER" />
		<sec:custom-filter position="FORM_LOGIN_FILTER"
			ref="authenticationProcessFilter" />
	</sec:http>

	<sec:authentication-manager alias="authenticationManager"
		erase-credentials="false">
		<sec:authentication-provider ref="dbAuthenticationProvider" />
	</sec:authentication-manager>

	<bean id="ldapAuthenticationProvider" class="com.hippagriff.security.LDAPAuthenticationProvider" />
	<bean id="dbAuthenticationProvider" class="com.hippagriff.security.DBAuthenticationProvider" />

	<bean id="securityContextLogoutHandler"
		class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler">
		<property name="invalidateHttpSession" value="true" />
	</bean>

	<bean id="authenticationProcessFilter" class="com.hippagriff.security.AuthenticationProcessFilter">
		<property name="filterProcessesUrl" value="/login" />
		<property name="allowSessionCreation" value="false" />
		<property name="usernameParameter" value="username" />
		<property name="passwordParameter" value="password" />
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="postOnly" value="false" />
	</bean>

	<!-- ************************** -->
	<!-- End security setup -->
	<!-- ************************** -->


	<!-- ************************** -->
	<!-- hibernate setup -->
	<!-- ************************** -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="HippaDB" />
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter" ref="jpaVendorAdapter" />
		<property name="jpaPropertyMap" ref="jpaPropertyMap" />
	</bean>

	<bean id="jpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<util:map id="jpaPropertyMap" key-type="java.lang.String"
		value-type="java.lang.Object">
		<entry key="hibernate.hbm2ddl.auto" value="${hibernate.ddl.mode}" />
		<entry key="hibernate.dialect" value="${hibernate.dialect}" />
		<entry key="hibernate.default.schema" value="${hibernate.default.schema}" />
		<!-- Since we are using a single hibernate instance here, it makes sense 
			to keep the instance creation a Singleton -->
		<entry key="hibernate.cache.region.factory_class"
			value="org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory" />
		<entry key="hibernate.cache.use_second_level_cache" value="true" />
		<entry key="hibernate.cache.use_query_cache" value="true" />
		<!-- <entry key="hibernate.generate_statistics" value="${hibernate.query.cache.generate.stat}" 
			/> -->
	</util:map>

	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor">
		<description>enables @PersistenceUnit/@PersistenceContext annotations
		</description>
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />


	<!-- ************************** -->
	<!-- end hibernate setup -->
	<!-- ************************** -->


	<!-- ************************** -->
	<!-- Cache Implementation -->
	<!-- ************************** -->

	<bean id="cacheImpl" class="com.hippagriff.cache.HazelcastCacheImpl"
		init-method="initializeCache" destroy-method="destroyCache">
	</bean>

	<bean class="com.hazelcast.config.Config">
		<property name="networkConfig">
			<bean class="com.hazelcast.config.NetworkConfig">
				<property name="portAutoIncrement" value="false" />
			</bean>
		</property>
	</bean>

	<!-- ************************** -->
	<!-- end Cache setup -->
	<!-- ************************** -->


	<!-- ************************** -->
	<!-- Custom environment setup -->
	<!-- Note that "beans" definitions MUST BE LAST -->
	<!-- ************************** -->
	<beans profile="local">
		<jdbc:embedded-database id="dataSource" type="HSQL">
		</jdbc:embedded-database>

		<context:property-placeholder
			location="classpath:properties/base.properties,classpath:properties/local.properties" />
	</beans>

	<!-- This bean is specific to an openshift deployment of the app. It mirrors 
		a "test" deployment, just with a specific datasource specified here. -->
	<beans profile="openshift-test">
		<!-- deployed test environment configurations -->
		<bean id="dataSource"
			class="org.springframework.jdbc.datasource.DriverManagerDataSource">
			<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
			<property name="username" value="${OPENSHIFT_MYSQL_DB_USERNAME}"></property>
			<property name="password" value="${OPENSHIFT_MYSQL_DB_PASSWORD}"></property>
			<property name="url"
				value="jdbc:mysql://${OPENSHIFT_MYSQL_DB_HOST}:${OPENSHIFT_MYSQL_DB_PORT}/${OPENSHIFT_APP_NAME}"></property>
		</bean>

		<context:property-placeholder
			location="classpath:properties/base.properties,classpath:properties/test.properties" />
	</beans>

	<beans profile="test">
		<!-- deployed test environment configurations -->
		<jee:jndi-lookup id="dataSource" jndi-name="jdbc/hippagriff" />
		<context:property-placeholder
			location="classpath:properties/base.properties,classpath:properties/test.properties" />
	</beans>

	<beans profile="production">
		<!-- deployed production environment configurations -->
		<jee:jndi-lookup id="dataSource" jndi-name="jdbc/hippagriff" />
		<context:property-placeholder
			location="classpath:properties/base.properties,classpath:properties/production.properties" />
	</beans>

	<!-- ************************** -->
	<!-- End custom environment setup -->
	<!-- ************************** -->

</beans>